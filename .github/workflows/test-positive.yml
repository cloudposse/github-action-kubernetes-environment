name: Test example positive
on:
#  # Uncomment when test added first time to register workflow and comment it back after workflow would be registered
#  #
#  # Added pull_request to register workflow from the PR.
#  # Read more https://stackoverflow.com/questions/63362126/github-actions-how-to-run-a-workflow-created-on-a-non-master-branch-from-the-wo
#  pull_request: {}
  workflow_dispatch: {}

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Setup
        run: echo "Do setup"

  test:
    strategy:
      matrix: 
        include:
          - env: preview
            expected-namespace: app-ns
          - env: preview-prs
            expected-namespace: app-pr-undefined # undefined here because this is called through dispatch
          - env: production
            expected-namespace: foo-bar-zyx
          - env: dev
            expected-namespace: dev
        env: [preview, preview-prs, production, dev]
    runs-on: ubuntu-latest
    continue-on-error: true
    needs: [setup]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        
      - uses: ./
        id: current
        with:
          environment: ${{ matrix.env }}
          namespace: ns
          application: "app"
          config: |
            preview:
              cluster: cluster-preview
              namespace: ${{inputs.namespace}}
              reformat: branch-name
            
            preview-prs:
              cluster: cluster-preview-prs
              namespace: bar-123
              reformat: pr-number
            
            production:
              cluster: cluster-production
              namespace: Foo_Bar/ZYX | kebabcase

            dev:
              cluster: cluster-dev
              namespace: dev

      - uses: nick-fields/assert-action@v1
        with:
          actual: "${{ steps.current.outputs.namespace }}"
          expected: '${{ matrix.expected-namespace }}'

  teardown:
    runs-on: ubuntu-latest
    needs: [test]
    if: ${{ always() }}
    steps:
      - name: Tear down
        run: echo "Do Tear down"
